const cekHariKerja = (day) =>{
    return new Promise((resolve, reject)=>{
        setTimeout(() => {
            const dataDay = ['Senin', 'Selasa', 'Rabu', 'Kamis', 'Jumat']
            let cek = dataDay.find((item)=>{
                return item === day
            })
            if(cek){
                resolve(cek)
            }else{
                reject(new Error('Hari ini bukan hari kerja'))
            }
        }, 3000);
    })
}

cekHariKerja('Minggu').then((cek)=> {
//then merupakan method pada promise yang digunakan untuk mengecek kemungkinan error pada resolve sebuah kode
    console.log(`${cek} Hari kerja`)
}).catch((error)=> {
//jika kemudian ditemukan error pada then atau kondisi reject, maka catch berfungsi untuk menangkap tersebut agar kemudian dapat ditangani
    console.log(error)
}).finally(()=>  { 
    console.log('Selesai')
})

const getHariKerja = async (cek) => {
    try {
//try merupakan error handling pada async await yang digunakan untuk mengecek kemungkinan error pada resolve sebuah kode
        const hasil = await cekHariKerja(cek);
        console.log(`${hasil} adalah hari kerja`)
    } catch (error) {
//jika kemudian ditemukan error pada try, maka catch berfungsi untuk menangkap error tersebut agar kemudian dapat ditangani
        console.log(`${error}`)
    }
}
getHariKerja('Rabu')
